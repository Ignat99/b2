#ifndef HEADER_FCB6535989674B6CA35DD3E7E2C1405F // -*- mode:c++ -*-
#define HEADER_FCB6535989674B6CA35DD3E7E2C1405F

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

// Need to fix the terminology - SDL has "joysticks" (device with uncategorised
// bundle of axes, buttons, POV hats, etc.) and "game controllers" (device with
// some subset of standard game controller widgets: two analogue sticks, a
// d-pad, 4 face buttons, 2 triggers, 2 trigger buttons, etc.).
//
// This code actually deals with game controllers.

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

#include <string>

class Messages;

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

void JoystickDeviceAdded(int device_index, Messages *msg);
void JoystickDeviceRemoved(int device_instance, Messages *msg);
void ControllerAxisMotion(int timestamp, int device_instance, int axis, int value);
void ControllerButton(int timestamp, int device_instance, int button, bool state);

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

// This is not much like the other menus, but the state all ended up pretty
// self-contained, so why not.
void DoJoysticksMenuImGui(Messages *msg);

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

static constexpr size_t NUM_BEEB_JOYSTICKS=2;

std::string GetPCJoystickDeviceNameByBeebIndex(size_t beeb_index);
void SetPCJoystickDeviceNameByBeebIndex(size_t beeb_index, std::string device_name);

void CloseJoysticks();

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

#endif
